{"version":3,"sources":["HeaderConfig.tsx"],"names":["HeaderConfig","route","title","headerRight","headerLeft","headerCenter","headerTitle","headerBackTitle","headerBackTitleVisible","backButtonImage","headerHideBackButton","headerHideShadow","headerLargeTitleHideShadow","headerTintColor","headerTopInsetEnabled","headerLargeTitle","headerTranslucent","headerStyle","headerLargeStyle","headerTitleStyle","headerLargeTitleStyle","headerBackTitleStyle","headerShown","backButtonInCustomView","direction","colors","tintColor","primary","backgroundColor","card","fontFamily","fontSize","blurEffect","color","undefined","name","text"],"mappings":"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","sourcesContent":["import { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n} from 'react-native-screens';\nimport { NativeStackNavigationOptions } from '../types';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig({\n  route,\n  title,\n  headerRight,\n  headerLeft,\n  headerCenter,\n  headerTitle,\n  headerBackTitle,\n  headerBackTitleVisible = true,\n  backButtonImage,\n  headerHideBackButton,\n  headerHideShadow,\n  headerLargeTitleHideShadow,\n  headerTintColor,\n  headerTopInsetEnabled = true,\n  headerLargeTitle,\n  headerTranslucent,\n  headerStyle = {},\n  headerLargeStyle = {},\n  headerTitleStyle = {},\n  headerLargeTitleStyle = {},\n  headerBackTitleStyle = {},\n  headerShown,\n  backButtonInCustomView,\n  direction,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor = headerTintColor ?? colors.primary;\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyle.backgroundColor ? headerStyle.backgroundColor : colors.card\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={headerBackTitleStyle.fontFamily}\n      backTitleFontSize={headerBackTitleStyle.fontSize}\n      blurEffect={headerStyle.blurEffect}\n      color={tintColor}\n      direction={direction}\n      hidden={headerShown === false}\n      hideBackButton={headerHideBackButton}\n      hideShadow={headerHideShadow}\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyle.backgroundColor}\n      largeTitleColor={headerLargeTitleStyle.color}\n      largeTitleFontFamily={headerLargeTitleStyle.fontFamily}\n      largeTitleFontSize={headerLargeTitleStyle.fontSize}\n      largeTitleHideShadow={headerLargeTitleHideShadow}\n      title={\n        headerTitle !== undefined\n          ? headerTitle\n          : title !== undefined\n          ? title\n          : route.name\n      }\n      titleColor={\n        headerTitleStyle.color !== undefined\n          ? headerTitleStyle.color\n          : headerTintColor !== undefined\n          ? headerTintColor\n          : colors.text\n      }\n      titleFontFamily={headerTitleStyle.fontFamily}\n      titleFontSize={headerTitleStyle.fontSize}\n      topInsetEnabled={headerTopInsetEnabled}\n      translucent={headerTranslucent === true}>\n      {headerRight !== undefined ? (\n        <ScreenStackHeaderRightView>\n          {headerRight({ tintColor })}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {backButtonImage !== undefined ? (\n        <ScreenStackHeaderBackButtonImage\n          key=\"backImage\"\n          source={backButtonImage}\n        />\n      ) : null}\n      {headerLeft !== undefined ? (\n        <ScreenStackHeaderLeftView>\n          {headerLeft({ tintColor })}\n        </ScreenStackHeaderLeftView>\n      ) : null}\n      {headerCenter !== undefined ? (\n        <ScreenStackHeaderCenterView>\n          {headerCenter({ tintColor })}\n        </ScreenStackHeaderCenterView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n"]}